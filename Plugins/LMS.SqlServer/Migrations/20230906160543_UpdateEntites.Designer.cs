// <auto-generated />
using LMS.SqlServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.SqlServer.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    [Migration("20230906160543_UpdateEntites")]
    partial class UpdateEntites
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.BusinessCore.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerName = "Vejle Kommone"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerName = "Vejen Kommone"
                        });
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EAN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.GroupProduct", b =>
                {
                    b.Property<int>("GroupProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupProductId"));

                    b.Property<int>("AddedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasedProductId")
                        .HasColumnType("int");

                    b.HasKey("GroupProductId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PurchasedProductId");

                    b.ToTable("GroupProducts");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.PurchasedProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PurchasedQty")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CustomerId");

                    b.ToTable("PurchasedProducts");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.Group", b =>
                {
                    b.HasOne("LMS.BusinessCore.Entities.Customer", "Customer")
                        .WithMany("Groups")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.GroupProduct", b =>
                {
                    b.HasOne("LMS.BusinessCore.Entities.Group", "Group")
                        .WithMany("GroupProducts")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.BusinessCore.Entities.PurchasedProduct", "Product")
                        .WithMany("GroupProducts")
                        .HasForeignKey("PurchasedProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.PurchasedProduct", b =>
                {
                    b.HasOne("LMS.BusinessCore.Entities.Customer", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.Customer", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.Group", b =>
                {
                    b.Navigation("GroupProducts");
                });

            modelBuilder.Entity("LMS.BusinessCore.Entities.PurchasedProduct", b =>
                {
                    b.Navigation("GroupProducts");
                });
#pragma warning restore 612, 618
        }
    }
}

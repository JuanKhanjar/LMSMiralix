@page "/customer/{customerId:int}"
@using LMS.BusinessUseCases.CustomerUC.CustomerUCInterfaces;
@inject IGetCustomerWithGroupsAndProductsUC _IGetCustomerWithGroupsAndProductsUC


@using LMS.BusinessUseCases.PurchasedProductsUC.PurchasedProductUCInterfaces;
@inject IGetPurchasedProductsByCustomerIdUC _IGetPurchasedProductsByCustomerIdUC

@inject NavigationManager navigationManager

<div class="container-fluid">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                @if (_customer != null)
                {
                    <div class="card-header bg-primary text-white">
                        <h5 class="m-0">@_customer?.CustomerName / @_customer?.CustomerId</h5>
                    </div>

                    <div class="card-body">
                        @if (_customer.Groups != null && _customer.Groups.Any())
                        {
                            @foreach (var group in _customer.Groups)
                            {
                                <div class="card p-2">
                                    <details>
                                        <summary>
                                            <div class="card-header bg-secondary text-white">
                                                <h6 class="m-0">Group ID: @group.GroupId</h6>
                                                <p class="m-0">Group Name: @group.GroupName</p>
                                                <p class="m-0">EAN: @group.EAN</p>
                                            </div>
                                        </summary>
                                        <div class="card-body">
                                            <table class="table table-striped table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>Type</th>
                                                        <th>Cost</th>
                                                        <th>Remaining</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (group != null && group.GroupProducts != null && group.GroupProducts.Any())
                                                    {
                                                        foreach (var product in group.GroupProducts)
                                                        {
                                                            <tr>
                                                                <td>@(product?.Product?.ProductName)</td>
                                                                <td>@(product?.Product?.ProductPrice.ToString("C"))</td>
                                                                <td>@(product?.Product?.PurchasedQty)</td>
                                                            </tr>
                                                        }
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="d-flex justify-content-between p-2">
                                            <button class="btn btn-outline-secondary" @onclick="(()=>EditGroup(group.GroupId))">Edit</button>

                                            <button class="btn btn-outline-danger">Delete </button>
                                        </div>
                                    </details>
                                </div>
                            }
                        }
                    </div>
                }
                else
                {
                    <div class="card-header ">
                        <h5>Custoner Not Found</h5>
                    </div>
                }

            </div>
        </div>
        <div class="col-md-8">
            <table class="table">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Cost</th>
                        <th>Remaining</th>
                    </tr>
                </thead>
                @if (purchasedProducts != null && purchasedProducts.Any())
                {
                    <tbody>
                        @foreach (var product in purchasedProducts)
                        {
                            <tr>
                                <td>@product.ProductName</td>
                                <td>@product.ProductPrice</td>
                                <td>@product.PurchasedQty</td>
                            </tr>
                        }
                    </tbody>
                }
                else
                {
                    <tbody>
                        <tr>
                            <td colspan="3">No purchased products found.</td>
                        </tr>
                    </tbody>
                }
            </table>
            <div class="btn btn-success d-flex justify-content-end">Add</div>
        </div>

    </div>
</div>


@code {
    [Parameter]
    public int customerId { get; set; }
    private Customer? _customer = new Customer();

    private List<PurchasedProduct>? purchasedProducts = new List<PurchasedProduct>();

    protected override async Task OnInitializedAsync()
    {
        if (customerId > 0)
        {
            _customer = await _IGetCustomerWithGroupsAndProductsUC.ExecuteAsync(customerId);
            if (_customer != null)
            {
                purchasedProducts = (await _IGetPurchasedProductsByCustomerIdUC.ExecuteAsync(customerId)).ToList();
            }
        }
    }


    private void EditGroup(int groupId)
    {
        // Navigate to the group detail page with customer and group IDs
        navigationManager.NavigateTo($"/group/{customerId}/{groupId}");
    }

}
